#spring.application.name=order
#eureka.client.service-url.defaultZone=http://localhost:1000/eureka/
#eureka.instance.hostname=
#eureka.instance.preferIpAddress=true
#eureka.instance.instance-id=localhost:${server.port}
#配置自定义负载均衡器:需要访问的应用名+ 该负载均衡器=负载均衡的规则类
#product.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://47.98.223.30:3306/sell?useSSL=false&characterEncoding=utf-8
#spring.datasource.username=root
#spring.datasource.password=oa#123
#
#spring.jpa.show-sql=true

#config-clent配置
spring.application.name=order
spring.cloud.config.discovery.enabled=true
spring.cloud.config.discovery.service-id=CONFIG
#访问不同环境(同一分支下的不同文件)，看是否可以访问文件，另外如果是order.properties是公用的
spring.cloud.config.profile=dev
#spring.cloud.config.profile=test
#分支name在服务端配置
#这个必须要配置该注册中心，这个与项目加载顺序有关(只有通过注册中心才能访问config)，不加默认访问8761，config默认访问8888
eureka.client.service-url.defaultZone=http://localhost:1000/eureka/
#这里该文件使用bootstrap.properties 因为application加载太靠后，需要启动时加载这些配置
#将以上数据库jpa的配置放入到远程git上

#高可用 不做演示
#由于config-server本身是微服务，只需要配置多台即可，查看client使用了哪个服务可以查看日志端口即可

#spring-bus自动刷新配置 原本应该写到远端git上公共配置里面的，为方便写到这里

#redis连接
spring.rabbitmq.addresses=47.98.223.30:5672
spring.redis.host=47.98.223.30
spring.redis.port=6431
spring.redis.password=c71440939b76ced7f4ed7621ba04a8011172fda8a991b26b
spring.redis.timeout=10000

#使用以下配置项，必须要在方法名上加上@HystrixCommand注解 这个配置是没有提示的，自己写的时候看源码复制即可
#default是全局的一个设置
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=1000
#想要给某个方法单独设置 commandKey 不指定这个默认是方法名getProductList
hystrix.command.getProductList.execution.isolation.thread.timeoutInMilliseconds=3000

management.endpoints.web.exposure.include=hystrix.stream

#logging.level.org.springframework.cloud.netflix.hystrix=debug



feign.hystrix.enabled=true
#设置日志级别
logging.level.org.springframework.cloud.netflix.ribbon=debug
logging.level.org.springframework.cloud.openfeign=debug

#服务zipkin的地址 使用默认
#spring.zipkin.base-url
#监控抽样百分比 默认0.1 开发环境设置为1 开启监控
spring.zipkin.enabled=true
spring.sleuth.sampler.probability=1.0
#spring.zipkin.discovery-client-enabled=true
#spring.zipkin.locator.discovery.enabled=true
